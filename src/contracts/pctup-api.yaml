openapi: '3.0.3'
info:
  title: PCtup API
  version: '1.0'

paths:
  /signup:
    post:
      tags:
        - /login
      description: >-
        Cria conta.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        required: true

      responses:
        '201':
          description: 'Successful request.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/ObjectID'
                  name:
                    type: string
                  accessToken:
                    type: string
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      tags:
        - /login
      description: >-
        Autentica a sessão.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
        required: true

      responses:
        '200':
          description: 'Successful request.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/ObjectID'
                  name:
                    type: string
                  accessToken:
                    type: string
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{userId}:
    get:
      tags:
        - /users
      description: >-
        Busca usuário por id.

      parameters:
        - name: userId
          in: path
          description: >-
            ObjectId do usuário.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'

      responses:
        '200':
          description: 'Successful request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - /users
      description: >-
        Atualiza usuário por id.

      parameters:
        - name: userId
          in: path
          description: >-
            ObjectId do usuário.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParamsUpdateUser'
        required: true

      responses:
        '204':
          description: 'The resource was updated successfully.'

        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - /users
      description: >-
        Remove usuário por id.

      parameters:
        - name: userId
          in: path
          description: >-
            ObjectId do usuário.
          required: true
          schema:
            $ref: '#/components/schemas/ObjectID'

      responses:
        '204':
          description: 'The resource was deleted successfully.'

        default:
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

servers:
  - url: '/api/v1'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  schemas:
    Date:
      type: string
      format: date

    DateTime:
      type: string
      format: date-time

    ObjectID:
      type: string
      pattern: '^[0-9a-fA-F]{24}$'

    Email:
      type: string
      format: email

    Error:
      properties:
        message:
          type: string
      required:
        - message

    CreateAccount:
      properties:
        name:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
          minLength: 6
      required:
        - 'name'
        - 'email'
        - 'password'

    LoginParams:
      properties:
        email:
          $ref: '#/components/schemas/Email'
        password:
          type: string
      required:
        - 'email'
        - 'password'

    UserResponse:
      properties:
        _id:
          $ref: '#/components/schemas/ObjectID'
        nome:
          type: string
        email:
          $ref: '#/components/schemas/Email'
        dataNascimento:
          $ref: '#/components/schemas/DateTime'
        profissao:
          type: string
        estado:
          type: string
        cidade:
          type: string
        cargo:
          type: string
        createdAt:
          $ref: '#/components/schemas/DateTime'
        updatedAt:
          $ref: '#/components/schemas/DateTime'

    ParamsUpdateUser:
      properties:
        nome:
          type: string
        dataNascimento:
          $ref: '#/components/schemas/Date'
        profissao:
          type: string
        estado:
          type: string
        cidade:
          type: string
